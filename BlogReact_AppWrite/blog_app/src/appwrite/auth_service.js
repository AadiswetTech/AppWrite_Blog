import config from "../Congfig/config";

import {Client,Account,ID} from "appwrite"
export class AuthService
{
    client=new Client();
    account;
    constructor()
    {
        this.client
        .setEndpoint(config.appwriteUrl)
        .setProject(config.appwriteProjectId);
        this.account=new Account(this.client)
    }

    async createAccount(email,password,name)
    {

        //use try catch for any exception
     try 
     {
        //user id will be generated by appwrite
   const userAccount= await this.account.create(ID.unique(),email,password,name)
   if(userAccount)
   {
    //login returned from login method 
    return this.login({email,password})
   }
   else{
    return userAccount;
   }
     }
     catch(error)
     {
   throw error;
     }
    }

  //method for login account of appwrite give createEmailSession for login credential
  async login({email,password})
  {
    try 
    {
    return   await this.account.createEmailSession(email,password) 
    } 
    catch (error) {
        
    }
  }  

  //get user functionality
  async getCurrentUser()
  {
    try
     
    {
        return await this.account.get();
        
    } catch (error) 
    {
        console.log("APPwrite service :: getCurrentUser ::error",error)
    }
    return null;
  }

  //logout functionality
  async logout()
  {
    try
     {
        await this.account.deleteSessions()
        
    } catch (error) {
        throw error
    }
  }
}

const authService= new AuthService();
export default AuthService